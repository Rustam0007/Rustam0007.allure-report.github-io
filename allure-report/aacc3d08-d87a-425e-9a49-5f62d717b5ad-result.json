{"name": "test_debit_reverse", "status": "failed", "statusDetails": {"message": "AssertionError: UnExpected: status. Expected: 12. Actually: 8\nassert 8 == 12\n +  where 12 = transactionStatus.REVERSE", "trace": "self = <tests.Our_card.Card_gateway.Order.Reverse.Positive.test_reverse_debit.TestReverseDebit object at 0x000002673236C4C0>\nselect_value = <function select_value.<locals>._select_value at 0x000002673241F880>\n\n    @allure.feature(f'{positive_cases} Reverse Debit')\n    def test_debit_reverse(self, select_value):\n        with allure.step(f'{data_create} для Debit'):\n            debit_data = self.debitByPanExpiry(externalRef=None, pan=OURCARD.get_pan(), expiry=OURCARD.get_full_expiry(), amount=randint(101, 300), currency=currency.TJS)\n        with allure.step(send_request):\n            debit_response = MyRequests.post(url=DEBIT_URL, data=debit_data)\n            allure.attach(json.dumps(debit_data), name='Request:', attachment_type=attachment_type.JSON)\n            allure.attach(json.dumps(debit_response.json()), name='Response:', attachment_type=attachment_type.JSON)\n        with allure.step(response_code):\n            Assertions.assert_code_status(debit_response, statusCode.APPROVED)\n    \n        with allure.step('Сохранение id для валидации'):\n            debit_id = debit_response.json()['payload']['id']\n        with allure.step('Сохранение externalRef для валидации'):\n            debit_externalRef = debit_response.json()['payload']['externalRef']\n    \n        with allure.step(f'{data_create} для Reverse'):\n            reverse_data = self.reverse(externalRef=None, transactionExternalRef=debit_externalRef, orderType=orderType.DEBIT)\n        with allure.step(send_request):\n            reverse_response = MyRequests.post(url=REVERSE_URL, data=reverse_data)\n            allure.attach(json.dumps(reverse_data), name='Request:', attachment_type=attachment_type.JSON)\n            allure.attach(json.dumps(reverse_response.json()), name='Response:', attachment_type=attachment_type.JSON)\n    \n        with allure.step(response_code):\n            Assertions.assert_code_status(reverse_response, statusCode.APPROVED)\n    \n        with allure.step(\"БД: берём из БД из таблица Card_gateway->transaction, значение колонки: status для валидации\"):\n            debit_status_in_db = select_value('status', 'transaction', 'id', debit_id)[0]\n    \n        with allure.step(\"Проверка: status в БД равен 12 (reverse)\"):\n>           assert debit_status_in_db == transactionStatus.REVERSE, \\\n                f\"UnExpected: status. Expected: {transactionStatus.REVERSE}. Actually: {debit_status_in_db}\"\nE           AssertionError: UnExpected: status. Expected: 12. Actually: 8\nE           assert 8 == 12\nE            +  where 12 = transactionStatus.REVERSE\n\ntests\\Our_card\\Card_gateway\\Order\\Reverse\\Positive\\test_reverse_debit.py:46: AssertionError"}, "steps": [{"name": "Создание тестовых данных для Debit", "status": "passed", "start": 1704779550831, "stop": 1704779550831}, {"name": "Отправка запроса на API", "status": "passed", "attachments": [{"name": "Request:", "source": "ad8b9886-c357-45a5-8866-97ba32fadf97-attachment.json", "type": "application/json"}, {"name": "Response:", "source": "061c3201-71ec-4e6b-aa3a-745c5b38151c-attachment.json", "type": "application/json"}], "start": 1704779550831, "stop": 1704779551797}, {"name": "Проверка: код из Response", "status": "passed", "start": 1704779551797, "stop": 1704779551797}, {"name": "Сохранение id для валидации", "status": "passed", "start": 1704779551797, "stop": 1704779551797}, {"name": "Сохранение externalRef для валидации", "status": "passed", "start": 1704779551797, "stop": 1704779551797}, {"name": "Создание тестовых данных для Reverse", "status": "passed", "start": 1704779551797, "stop": 1704779551797}, {"name": "Отправка запроса на API", "status": "passed", "attachments": [{"name": "Request:", "source": "0b660cb8-d218-4266-8d32-082d5e529ae2-attachment.json", "type": "application/json"}, {"name": "Response:", "source": "6d45b71f-86bd-4c7a-b92f-652d9a3c29ab-attachment.json", "type": "application/json"}], "start": 1704779551797, "stop": 1704779552620}, {"name": "Проверка: код из Response", "status": "passed", "start": 1704779552620, "stop": 1704779552620}, {"name": "БД: берём из БД из таблица Card_gateway->transaction, значение колонки: status для валидации", "status": "passed", "start": 1704779552620, "stop": 1704779552769}, {"name": "Проверка: status в БД равен 12 (reverse)", "status": "failed", "statusDetails": {"message": "AssertionError: UnExpected: status. Expected: 12. Actually: 8\nassert 8 == 12\n +  where 12 = transactionStatus.REVERSE\n", "trace": "  File \"E:\\card_gateway\\tests\\Our_card\\Card_gateway\\Order\\Reverse\\Positive\\test_reverse_debit.py\", line 46, in test_debit_reverse\n    assert debit_status_in_db == transactionStatus.REVERSE, \\\n"}, "start": 1704779552769, "stop": 1704779552769}], "start": 1704779550831, "stop": 1704779552771, "uuid": "a50049ed-fc0d-4981-9b12-5370ffad7726", "historyId": "15283b13aecc2e2ee23e722bc4f82d0e", "testCaseId": "15283b13aecc2e2ee23e722bc4f82d0e", "fullName": "tests.Our_card.Card_gateway.Order.Reverse.Positive.test_reverse_debit.TestReverseDebit#test_debit_reverse", "labels": [{"name": "feature", "value": "[POSITIVE] cases - Reverse Debit"}, {"name": "owner", "value": "Rustam Saidov"}, {"name": "parentSuite", "value": "tests.Our_card.Card_gateway.Order.Reverse.Positive"}, {"name": "suite", "value": "test_reverse_debit"}, {"name": "subSuite", "value": "TestReverseDebit"}, {"name": "host", "value": "Saidov-Rustam"}, {"name": "thread", "value": "10116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Our_card.Card_gateway.Order.Reverse.Positive.test_reverse_debit"}]}