{"name": "test_credit_reverse", "status": "failed", "statusDetails": {"message": "AssertionError: UnExpected: status. Expected: 12. Actually: 8\nassert 8 == 12\n +  where 12 = transactionStatus.REVERSE", "trace": "self = <tests.Our_card.Card_gateway.Order.Reverse.Positive.test_reverse_credit.TestReverseCredit object at 0x0000026732377D00>\nselect_value = <function select_value.<locals>._select_value at 0x00000267323EC0D0>\n\n    @allure.feature(f'{positive_cases} Reverse Credit')\n    def test_credit_reverse(self, select_value):\n        with allure.step(f'{data_create} для Credit'):\n            credit_data = self.creditByPan(externalRef=None, pan=OURCARD.get_pan(), amount=randint(101, 300), currency=currency.TJS, hasFee=\"0\")\n        with allure.step(send_request):\n            credit_response = MyRequests.post(url=CREDIT_URL, data=credit_data)\n            allure.attach(json.dumps(credit_data), name='Request:', attachment_type=attachment_type.JSON)\n            allure.attach(json.dumps(credit_response.json()), name='Response:', attachment_type=attachment_type.JSON)\n        with allure.step(response_code):\n            Assertions.assert_code_status(credit_response, statusCode.APPROVED)\n    \n        with allure.step('Сохранение id для валидации'):\n            credit_id = credit_response.json()['payload']['id']\n        with allure.step('Сохранение externalRef для валидации'):\n            credit_externalRef = credit_response.json()['payload']['externalRef']\n    \n        with allure.step(f'{data_create} для Reverse'):\n            reverse_data = self.reverse(externalRef=None, transactionExternalRef=credit_externalRef, orderType=orderType.CREDIT)\n        with allure.step(send_request):\n            reverse_response = MyRequests.post(url=REVERSE_URL, data=reverse_data)\n            allure.attach(json.dumps(reverse_data), name='Request:', attachment_type=attachment_type.JSON)\n            allure.attach(json.dumps(reverse_response.json()), name='Response:', attachment_type=attachment_type.JSON)\n    \n        with allure.step(response_code):\n            Assertions.assert_code_status(reverse_response, statusCode.APPROVED)\n    \n        with allure.step(\"БД: берём из БД из таблица Card_gateway->transaction, значение колонки: status для валидации\"):\n            credit_status_in_db = select_value('status', 'transaction', 'id', credit_id)[0]\n    \n        with allure.step(\"Проверка: status в БД равен 12 (reverse)\"):\n>           assert credit_status_in_db == transactionStatus.REVERSE, \\\n                f\"UnExpected: status. Expected: {transactionStatus.REVERSE}. Actually: {credit_status_in_db}\"\nE           AssertionError: UnExpected: status. Expected: 12. Actually: 8\nE           assert 8 == 12\nE            +  where 12 = transactionStatus.REVERSE\n\ntests\\Our_card\\Card_gateway\\Order\\Reverse\\Positive\\test_reverse_credit.py:46: AssertionError"}, "steps": [{"name": "Создание тестовых данных для Credit", "status": "passed", "start": 1704779549136, "stop": 1704779549136}, {"name": "Отправка запроса на API", "status": "passed", "attachments": [{"name": "Request:", "source": "fbad4f98-ee77-48b5-b2d0-ba40cfddfead-attachment.json", "type": "application/json"}, {"name": "Response:", "source": "d3a746b0-217a-4deb-bbee-4a0212f325ae-attachment.json", "type": "application/json"}], "start": 1704779549136, "stop": 1704779549840}, {"name": "Проверка: код из Response", "status": "passed", "start": 1704779549840, "stop": 1704779549840}, {"name": "Сохранение id для валидации", "status": "passed", "start": 1704779549840, "stop": 1704779549840}, {"name": "Сохранение externalRef для валидации", "status": "passed", "start": 1704779549840, "stop": 1704779549840}, {"name": "Создание тестовых данных для Reverse", "status": "passed", "start": 1704779549840, "stop": 1704779549840}, {"name": "Отправка запроса на API", "status": "passed", "attachments": [{"name": "Request:", "source": "ba059020-2251-485d-9f24-5af6d259e497-attachment.json", "type": "application/json"}, {"name": "Response:", "source": "15852396-a682-43b6-858e-c2d0be16f022-attachment.json", "type": "application/json"}], "start": 1704779549840, "stop": 1704779550576}, {"name": "Проверка: код из Response", "status": "passed", "start": 1704779550576, "stop": 1704779550576}, {"name": "БД: берём из БД из таблица Card_gateway->transaction, значение колонки: status для валидации", "status": "passed", "start": 1704779550576, "stop": 1704779550676}, {"name": "Проверка: status в БД равен 12 (reverse)", "status": "failed", "statusDetails": {"message": "AssertionError: UnExpected: status. Expected: 12. Actually: 8\nassert 8 == 12\n +  where 12 = transactionStatus.REVERSE\n", "trace": "  File \"E:\\card_gateway\\tests\\Our_card\\Card_gateway\\Order\\Reverse\\Positive\\test_reverse_credit.py\", line 46, in test_credit_reverse\n    assert credit_status_in_db == transactionStatus.REVERSE, \\\n"}, "start": 1704779550676, "stop": 1704779550677}], "start": 1704779549136, "stop": 1704779550678, "uuid": "54b265ff-f5e8-4830-914a-8cd4c69764c8", "historyId": "cbf51b5450e59ae5f46bf8d62555ab27", "testCaseId": "cbf51b5450e59ae5f46bf8d62555ab27", "fullName": "tests.Our_card.Card_gateway.Order.Reverse.Positive.test_reverse_credit.TestReverseCredit#test_credit_reverse", "labels": [{"name": "feature", "value": "[POSITIVE] cases - Reverse Credit"}, {"name": "owner", "value": "Rustam Saidov"}, {"name": "parentSuite", "value": "tests.Our_card.Card_gateway.Order.Reverse.Positive"}, {"name": "suite", "value": "test_reverse_credit"}, {"name": "subSuite", "value": "TestReverseCredit"}, {"name": "host", "value": "Saidov-Rustam"}, {"name": "thread", "value": "10116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Our_card.Card_gateway.Order.Reverse.Positive.test_reverse_credit"}]}